import {
  BoxFlex,
  LeftCardContainer,
  SocialMedia,
  StaticText,
  SubTitle,
  TitleContainer,
  TypingText,
  Github,
  ButtonBack,
  ButtonAdd,
  ButtonParents,
  TitleText,
} from './StyleIntroductionCard';
import LinkedinComponent from './Linkedin';
import { useDispatch, useSelector } from 'react-redux';
import Modal from '../../../shared/UI/modal/Modal';
import { useEffect, useState } from 'react';
import { TextField, Typography } from '@mui/material';
import {
  aboutMeGet,
  aboutMeThunk,
} from '../../../store/slices/edit-profile-slice/editProfile.thunk';

const LeftCard = () => {
  const dispatch = useDispatch();
  const { isAuth, data } = useSelector((state) => state.editProfile);
  const [open, setOpen] = useState(false);
  const [input, setInput] = useState('');
  const [error, setError] = useState('');
  const [displayText, setDisplayText] = useState('–ü—Ä–∏–≤–µ—Ç, —è ‚Äî –ê–¥–∏–ª–µ—Ç (–ê–¥–∏).');

  useEffect(() => {
    dispatch(aboutMeGet());
  }, [dispatch]);

  useEffect(() => {
    if (data.length > 0) {
      const lastItem = data[data.length - 1];
      setDisplayText(lastItem.text);
    }
  }, [data]);

  const handleOpen = () => {
    setOpen(true);
  };

  const handleSubmin = () => {
    if (input.length === 25) {
      const data = {
        text: input,
      };
      dispatch(aboutMeThunk(data));
      setOpen(false);
      setInput('');
      setError('');
      setDisplayText(input); 
    } else {
      setError('–¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ä–æ–≤–Ω–æ –∏–∑ 25 —Å–∏–º–≤–æ–ª–æ–≤.');
    }
  };

  const handleInputValue = (e) => {
    const value = e.target.value;

    if (value.length <= 25) {
      setInput(value);

      if (value.length < 25) {
        setError(`–û—Å—Ç–∞–ª–æ—Å—å —Å–∏–º–≤–æ–ª–æ–≤: ${25 - value.length}`);
      } else {
        setError('–î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ —Ä–∞–≤–Ω–∞ 25 —Å–∏–º–≤–æ–ª–∞–º.');
      }
    } else {
      setError('–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–∏–º–≤–æ–ª–æ–≤!');
    }
  };

  const handleKeyPress = (e) => {
    if (e.key === 'Enter' && input.length === 25) {
      handleSubmin();
    }
  };

  const handleClose = () => {
    setOpen(false);
  };

  return (
    <>
      <LeftCardContainer>
        <TitleContainer>
          <StaticText onClick={isAuth ? handleOpen : undefined} variant="h1">
            {displayText}
          </StaticText>
          <BoxFlex>
            <StaticText variant="h1" spaced>
              –Ø
            </StaticText>
            <TypingText variant="h1">Frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫</TypingText>
          </BoxFlex>
        </TitleContainer>

        <SubTitle>
          –ö–∞–∫ –æ–ø—ã—Ç–Ω—ã–π
          <span style={{ color: '#ae08bc', animation: 'none' }}>
            Frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫
          </span>
          , —è –ø–æ—Å–≤—è—â–∞—é —Å–µ–±—è –≤–æ–ø–ª–æ—â–µ–Ω–∏—é –∏–¥–µ–π –≤ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
          –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –º–æ–∏–º–∏ –Ω–µ–¥–∞–≤–Ω–∏–º–∏{' '}
          <span style={{ color: '#ae08bc', animation: 'none' }}>–ø—Ä–æ–µ–∫—Ç–∞–º–∏</span>{' '}
          –∏<span style={{ color: '#ae08bc', animation: 'none' }}>—Å—Ç–∞—Ç—å—è–º–∏</span>
          , –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—Ç –º–æ–∏ –Ω–∞–≤—ã–∫–∏ –≤ Front-End —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.{' '}
          <span>üìç</span>
        </SubTitle>
        <SocialMedia>
          <LinkedinComponent />
          <Github>
            <p>
              <ion-icon name="logo-github"></ion-icon>
            </p>
          </Github>
        </SocialMedia>
      </LeftCardContainer>
      <Modal open={open} onClose={handleClose}>
        <TitleText>
          –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª–∏–Ω–æ–π —Ä–æ–≤–Ω–æ 25 —Å–∏–º–≤–æ–ª–æ–≤:
        </TitleText>
        <TextField
          variant="outlined"
          label="text"
          fullWidth
          value={input}
          onChange={handleInputValue}
          onKeyPress={handleKeyPress}
          error={input.length !== 25}
          inputProps={{ maxLength: 25 }}
        />

        <Typography color={input.length !== 25 ? 'error' : 'textSecondary'}>
          {error}
        </Typography>
        <ButtonParents>
          <ButtonBack onClick={handleClose}>–ù–∞–∑–∞–¥</ButtonBack>
          <ButtonAdd onClick={handleSubmin} disabled={input.length !== 25}>
            –î–æ–±–∞–≤–∏—Ç—å
          </ButtonAdd>
        </ButtonParents>
      </Modal>
    </>
  );
};

export default LeftCard
